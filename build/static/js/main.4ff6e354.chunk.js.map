{"version":3,"sources":["Pagination.jsx","App.js","index.js"],"names":["Dot","styled","div","props","css","secondaryColor","selected","primaryColor","clickable","Dots","Arrows","Arrow","Wrapper","Pagination","onClick","onPrevPageClick","icon","faArrowLeft","onNextPageClick","faArrowRight","elements","i","f","push","page","onPageChange","key","numOfPages","renderDots","map","el","availableSegments","start","stop","App","useState","setPage","segments","setSegments","direction","setDirection","play","setPlay","useEffect","window","addEventListener","handleKeyPress","removeEventListener","handleSegmentsChange","e","event","keyCode","handlePrevPageClick","handleNextPageClick","prevPage","Animation","animation","onComplete","id","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4ff6e354.chunk.js","sourcesContent":["// React\nimport React from \"react\";\n\n// Libraries\nimport styled, { css } from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Dot = styled.div`\n  width: 15px;\n  height: 15px;\n\n  border-radius: 15rem;\n  ${(props) => css`\n    background-color: ${props.secondaryColor};\n  `}\n\n  margin: 0 10px;\n\n  ${(props) =>\n    props.selected &&\n    css`\n      width: 35px;\n\n      background-color: ${props.primaryColor};\n    `}\n\n  ${(props) =>\n    props.clickable &&\n    css`\n      cursor: pointer;\n    `}\n\n  transition: all 0.15s;\n`;\n\nconst Dots = styled.div`\n  position: absolute;\n  bottom: 15px;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-flow: row nowrap;\n\n  align-items: center;\n  justify-content: center;\n\n  padding: 15px;\n`;\n\nconst Arrows = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate(0, -50%);\n\n  width: 100%;\n\n  display: flex;\n  flex-flow: row nowrap;\n\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Arrow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 15px;\n  margin: 15px;\n\n  background-color: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 5px;\n\n  cursor: pointer;\n\n  &:hover {\n    color: #fff;\n\n    &:first-child {\n      transform: translateX(-5px);\n    }\n\n    &:last-child {\n      transform: translateX(5px);\n    }\n  }\n\n  transition: all 0.15s;\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n`;\n\nconst Pagination = (props) => {\n  const handleClick = (page) => {\n    if (props.onPageChange) {\n      props.onPageChange(page);\n    }\n  };\n\n  const isClickable = (f) => {\n    if (typeof f === \"function\") return true;\n\n    return false;\n  };\n\n  const renderDots = () => {\n    const elements = [];\n\n    for (let i = 0; i < props.numOfPages; i++) {\n      elements.push(\n        <Dot\n          onClick={() => handleClick(i + 1)}\n          clickable={isClickable(props.onPageChange)}\n          selected={props.page === i + 1}\n          primaryColor={props.primaryColor}\n          secondaryColor={props.secondaryColor}\n          key={i}\n        />\n      );\n    }\n\n    return elements;\n  };\n\n  return (\n    <Wrapper>\n      <Arrows>\n        <Arrow onClick={props.onPrevPageClick && props.onPrevPageClick}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </Arrow>\n        <Arrow onClick={props.onNextPageClick && props.onNextPageClick}>\n          <FontAwesomeIcon icon={faArrowRight} />\n        </Arrow>\n      </Arrows>\n      <Dots>\n        {renderDots().map((el) => {\n          return el;\n        })}\n      </Dots>\n    </Wrapper>\n  );\n};\n\nexport default Pagination;\n","// React\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\n// Libraries\nimport styled from \"styled-components\";\n\n// Components\nimport Pagination from \"./Pagination\";\nimport Animation from \"./Animation\";\n\n// Assets\nimport animation from \"./van-animation.json\";\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  background-color: lightcoral;\n\n  height: 100vh;\n`;\n\nconst availableSegments = {\n  start: [55, 230],\n  stop: [175, 350]\n};\n\nexport default function App() {\n  const pages = 3;\n  const [page, setPage] = useState(1);\n  const [segments, setSegments] = useState([0, 33]);\n  const [direction, setDirection] = useState(1);\n  const [play, setPlay] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  useEffect(() => {\n    handleSegmentsChange(page);\n  }, [page]);\n\n  const handleKeyPress = (e) => {\n    e = e || window.event;\n\n    if (!play) {\n      if (e.keyCode === 37) {\n        handlePrevPageClick();\n      } else if (e.keyCode === 39) {\n        handleNextPageClick();\n      }\n    }\n  };\n\n  const handleSegmentsChange = (page) => {\n    if (direction === 1) {\n      if (page !== 1) {\n        setSegments([\n          availableSegments.start[page - 2],\n          availableSegments.stop[page - 2]\n        ]);\n      }\n    } else {\n      if (page !== pages) {\n        setSegments([\n          availableSegments.stop[page - 1],\n          availableSegments.start[page - 1]\n        ]);\n      }\n    }\n  };\n\n  const handlePrevPageClick = () => {\n    if (page !== 1) {\n      setDirection(-1);\n      setPage((prevPage) => prevPage - 1);\n      setPlay(true);\n    }\n  };\n\n  const handleNextPageClick = () => {\n    if (page !== pages) {\n      setDirection(1);\n      setPage((prevPage) => prevPage + 1);\n      setPlay(true);\n    }\n  };\n\n  const handleAnimationComplete = (e) => {\n    setPlay(false);\n  };\n\n  return (\n    <Wrapper>\n      <Animation\n        animation={animation}\n        segments={segments}\n        direction={direction}\n        play={play}\n        onComplete={handleAnimationComplete}\n        id=\"animation\"\n      />\n      <Pagination\n        numOfPages={pages}\n        page={page}\n        primaryColor=\"lightblue\"\n        secondaryColor=\"lightgrey\"\n        onPrevPageClick={handlePrevPageClick}\n        onNextPageClick={handleNextPageClick}\n      />\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}