{"version":3,"sources":["components/Pagination.jsx","components/Titles.jsx","App.js","index.js"],"names":["Dot","styled","div","props","css","secondaryColor","selected","primaryColor","Dots","Arrows","Arrow","disabled","Wrapper","Pagination","onNextPageClick","onPrevPageClick","numOfPages","onPageChange","page","handleKeyPress","e","dir","key","Error","onClick","onKeyPress","tabIndex","icon","faArrowLeft","faArrowRight","elements","i","push","renderDots","map","el","defaultProps","TopWrapper","SmallTitle","h2","Titles","renderTitles","titles","title","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","GlobalStyles","createGlobalStyle","availableSegments","start","stop","App","animationRef","useRef","useState","setPage","direction","setDirection","play","setPlay","setTitles","useEffect","window","addEventListener","removeEventListener","handleSegmentsChange","handleTitlesChange","splice","event","keyCode","handlePrevPageClick","handleNextPageClick","current","playSegments","prevPage","lottieRef","style","height","width","animationData","animation","loop","autoplay","onComplete","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.bdf5e7ae.chunk.js","sourcesContent":["// React\nimport React from \"react\";\n\n// Libraries\nimport styled, { css } from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Dot = styled.div`\n  width: 15px;\n  height: 15px;\n\n  border-radius: 15rem;\n  ${(props) => css`\n    background-color: ${props.secondaryColor};\n  `}\n\n  margin: 0 10px;\n\n  cursor: pointer;\n\n  ${({ selected, primaryColor }) =>\n    selected &&\n    css`\n      width: 35px;\n\n      background-color: ${primaryColor};\n    `}\n\n  transition: all 0.15s;\n`;\n\nconst Dots = styled.div`\n  position: absolute;\n  bottom: 15px;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-flow: row nowrap;\n\n  align-items: center;\n  justify-content: center;\n\n  padding: 15px;\n`;\n\nconst Arrows = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translate(0, -50%);\n\n  width: 100%;\n\n  display: flex;\n  flex-flow: row nowrap;\n\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Arrow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 15px;\n  margin: 15px;\n\n  background-color: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(10px);\n  border-radius: 5px;\n\n  cursor: pointer;\n\n  transition: all 0.15s;\n\n  ${({ disabled }) =>\n    disabled\n      ? css`\n          opacity: 0;\n          cursor: default;\n        `\n      : css`\n          &:hover {\n            color: #fff;\n\n            &:first-child {\n              transform: translateX(-5px);\n            }\n\n            &:last-child {\n              transform: translateX(5px);\n            }\n          }\n        `}\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n`;\n\nconst Pagination = ({\n  onNextPageClick,\n  onPrevPageClick,\n  numOfPages,\n  onPageChange,\n  page,\n  primaryColor,\n  secondaryColor,\n}) => {\n  const handleKeyPress = (e, dir) => {\n    if (e.key === \"Enter\") {\n      switch (dir) {\n        case \"next\":\n          onNextPageClick();\n          break;\n        case \"prev\":\n          onPrevPageClick();\n          break;\n        default:\n          throw new Error(\"Invalid direction\");\n      }\n    }\n  };\n\n  const renderDots = () => {\n    const elements = [];\n\n    for (let i = 0; i < numOfPages; i++) {\n      elements.push(\n        <Dot\n          onClick={() => onPageChange(i + 1)}\n          selected={page === i + 1}\n          primaryColor={primaryColor}\n          secondaryColor={secondaryColor}\n          key={i}\n        />\n      );\n    }\n\n    return elements;\n  };\n\n  return (\n    <Wrapper>\n      <Arrows>\n        <Arrow\n          disabled={page === 1}\n          onClick={onPrevPageClick}\n          onKeyPress={(e) => handleKeyPress(e, \"prev\")}\n          tabIndex=\"1\"\n        >\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </Arrow>\n        <Arrow\n          disabled={page === numOfPages}\n          onClick={onNextPageClick}\n          onKeyPress={(e) => handleKeyPress(e, \"next\")}\n          tabIndex=\"1\"\n        >\n          <FontAwesomeIcon icon={faArrowRight} />\n        </Arrow>\n      </Arrows>\n      <Dots>\n        {renderDots().map((el) => {\n          return el;\n        })}\n      </Dots>\n    </Wrapper>\n  );\n};\n\nPagination.defaultProps = {\n  primaryColor: \"lightblue\",\n  secondaryColor: \"lightgrey\",\n};\n\nexport default Pagination;\n","// React\nimport React from \"react\";\n\n// Libraries\nimport styled from \"styled-components\";\nimport { CSSTransitionGroup } from \"react-transition-group\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n`;\n\nconst TopWrapper = styled.div`\n  position: absolute;\n\n  top: 25px;\n  left: 0;\n\n  width: 100%;\n`;\n\nconst SmallTitle = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n\n  font-size: 28px;\n\n  color: #fff;\n`;\n\nconst Titles = ({ titles }) => {\n  const renderTitles = titles.map((title, i) => (\n    <SmallTitle key={`smallTitle_${i}`}>{title}</SmallTitle>\n  ));\n\n  return (\n    <Wrapper>\n      <TopWrapper>\n        <CSSTransitionGroup\n          transitionName=\"subtitle\"\n          transitionAppear={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={500}\n        >\n          {renderTitles}\n        </CSSTransitionGroup>\n      </TopWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Titles;\n","// React\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// Libraries\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Lottie from \"lottie-react\";\n\n// Components\nimport Pagination from \"./components/Pagination\";\nimport Titles from \"./components/Titles\";\n\n// Assets\nimport animation from \"./assets/van-animation.json\";\n\nconst GlobalStyles = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n    font-family: \"Alata\", sans-serif;\n  }\n\n  #root {\n    width: 100vw;\n    height: 100vh;\n\n    overflow-x: hidden;\n  }\n\n  .subtitle-enter {\n    opacity: 0.01;\n  }\n  \n  .subtitle-enter.subtitle-enter-active {\n    opacity: 1;\n    transition: opacity 500ms ease-in;\n  }\n\n  .subtitle-leave {\n    opacity: 1;\n  }\n  \n  .subtitle-leave.subtitle-leave-active {\n    opacity: 0.01;\n    transition: opacity 500ms ease-in;\n  }\n\n  .subtitle-appear {\n    opacity: 0.01;\n  }\n\n  .subtitle-appear.subtitle-appear-active {\n    opacity: 1;\n    transition: opacity 500ms ease-in;\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  background-color: lightcoral;\n\n  height: 100vh;\n`;\n\nconst availableSegments = {\n  start: [55, 230],\n  stop: [175, 350],\n};\n\nexport default function App() {\n  const pages = 3;\n  const animationRef = useRef();\n\n  const [page, setPage] = useState(1);\n  const [direction, setDirection] = useState(1);\n  const [play, setPlay] = useState(false);\n  const [titles, setTitles] = useState([\"Travel\"]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  useEffect(() => {\n    handleSegmentsChange(page);\n    handleTitlesChange(page);\n  }, [page]);\n\n  const handleTitlesChange = (title) => {\n    const titles = [\"Travel\", \"Surf\", \"Rest\"];\n\n    setTitles(titles.splice(0, title));\n  };\n\n  const handleKeyPress = (e) => {\n    e = e || window.event;\n\n    if (!play) {\n      if (e.keyCode === 37) {\n        handlePrevPageClick();\n      } else if (e.keyCode === 39) {\n        handleNextPageClick();\n      }\n    }\n  };\n\n  const handleSegmentsChange = (page) => {\n    if (!animationRef || !animationRef.current) return\n\n\n    if (direction === 1) {\n      if (page !== 1) {\n        animationRef.current.playSegments(\n          [availableSegments.start[page - 2], availableSegments.stop[page - 2]],\n          true\n        );\n      }\n    } else {\n      if (page !== pages) {\n        animationRef.current.playSegments(\n          [availableSegments.stop[page - 1], availableSegments.start[page - 1]],\n          true\n        );\n      }\n    }\n  };\n\n  const handlePrevPageClick = () => {\n    if (page !== 1 && !play) {\n      animationRef.current.setDirection(-1);\n      setDirection(-1);\n      setPlay(true);\n      setPage((prevPage) => prevPage - 1);\n    }\n  };\n\n  const handleNextPageClick = () => {\n    if (page !== pages && !play) {\n      animationRef.current.setDirection(1);\n      setDirection(1);\n      setPlay(true);\n      setPage((prevPage) => prevPage + 1);\n    }\n  };\n\n  const handleAnimationComplete = (e) => {\n    setPlay(false);\n  };\n\n  return (\n    <Wrapper>\n      <GlobalStyles />\n      <Titles titles={titles} />\n      <Lottie\n        lottieRef={animationRef}\n        style={{ height: \"100%\", width: \"100%\" }}\n        animationData={animation}\n        loop={false}\n        autoplay={false}\n        onComplete={handleAnimationComplete}\n      />\n      <Pagination\n        numOfPages={pages}\n        page={page}\n        onPrevPageClick={handlePrevPageClick}\n        onNextPageClick={handleNextPageClick}\n      />\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}